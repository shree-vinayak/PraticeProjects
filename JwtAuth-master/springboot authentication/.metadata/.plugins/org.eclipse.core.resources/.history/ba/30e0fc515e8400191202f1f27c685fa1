package com.authentication.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.authentication.model.User;
import com.authentication.service.UserService;

@CrossOrigin(origins = "*", maxAge = 3600)
@RestController
public class UserController {

	@Autowired
	private UserService userService;

	@RequestMapping(value = "/signup", method = RequestMethod.POST)
	public User saveUser(@RequestBody User user) {

		System.out.println("signup");
		return userService.save(user);
	}

	@PreAuthorize("hasRole('ADMIN')")
	@RequestMapping(value = "/users", method = RequestMethod.GET)
	public List<User> listUser() {
		System.out.println("adminusers");
		return userService.findAll();
	}

//	@RequestMapping(value = "/users/{id}", method = RequestMethod.GET)
//	public User getOne(@PathVariable(value = "id") Long id) {
//		System.out.println("usersid");
//		return userService.findById(id);
//	}
	 
	 
	//@Secured("ROLE_USER")
	    @PreAuthorize("hasRole('USER')")
	    ////@PreAuthorize("hasAnyRole('USER', 'ADMIN')")
	    @RequestMapping(value = "/users/{id}", method = RequestMethod.GET)
	    public ResponseEntity<User> getOne(@PathVariable("id") Long id){
	    	
	    	
	    	System.out.println("insdie the userid"+id);
	        User user=userService.findById(id);
	    	return  new ResponseEntity<User>(user,HttpStatus.OK);
	    }
	    
	    @PreAuthorize("hasRole('ADMIN')")
	    @RequestMapping(value = "/get", method = RequestMethod.GET)
		public List<User> get() {
			System.out.println("users");
			return userService.findAll();
		}

}
