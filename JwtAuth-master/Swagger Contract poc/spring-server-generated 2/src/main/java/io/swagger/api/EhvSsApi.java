/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.EhvSs;
import io.swagger.model.ErrorResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-05-29T12:54:27.285Z[GMT]")
@Api(value = "ehvSs", description = "the ehvSs API")
public interface EhvSsApi {

    @ApiOperation(value = "Creates a EhvSs", nickname = "addEhvSs", notes = "add details about a EhvSs", response = EhvSs.class, authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "electrical", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created", response = EhvSs.class),
        @ApiResponse(code = 401, message = "Access token is missing or invalid.", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "The specified resource was not found.", response = ErrorResponse.class) })
    @RequestMapping(value = "/ehvSs",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<EhvSs> addEhvSs(@ApiParam(value = "" ,required=true )  @Valid @RequestBody EhvSs body);


    @ApiOperation(value = "returns a EhvSs", nickname = "disableEhvSs", notes = "Here it will set the isActive field false", response = Boolean.class, responseContainer = "List", authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "electrical", })
    @ApiResponses(value = { 
        @ApiResponse(code = 202, message = "Accepted", response = Boolean.class, responseContainer = "List"),
        @ApiResponse(code = 401, message = "Access token is missing or invalid.", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "The specified resource was not found.", response = ErrorResponse.class) })
    @RequestMapping(value = "/ehvSs",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<List<Boolean>> disableEhvSs(@Min(0)@ApiParam(value = "id of the EhvSs to Disable isActive.",required=true, allowableValues = "") @PathVariable("id") Integer id);


    @ApiOperation(value = "returns all EhvSs", nickname = "getAllEhvSs", notes = "get details about all ehvSs", response = EhvSs.class, responseContainer = "List", authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "electrical", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Ok", response = EhvSs.class, responseContainer = "List"),
        @ApiResponse(code = 401, message = "Access token is missing or invalid.", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "The specified resource was not found.", response = ErrorResponse.class) })
    @RequestMapping(value = "/ehvSs",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<EhvSs>> getAllEhvSs();


    @ApiOperation(value = "returns a updated EhvSs", nickname = "updateEhvSs", notes = "update details about a EhvSs", response = EhvSs.class, authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "electrical", })
    @ApiResponses(value = { 
        @ApiResponse(code = 202, message = "Accepted", response = EhvSs.class),
        @ApiResponse(code = 401, message = "Access token is missing or invalid.", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "The specified resource was not found.", response = ErrorResponse.class) })
    @RequestMapping(value = "/ehvSs",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<EhvSs> updateEhvSs(@ApiParam(value = "" ,required=true )  @Valid @RequestBody EhvSs body);

}
