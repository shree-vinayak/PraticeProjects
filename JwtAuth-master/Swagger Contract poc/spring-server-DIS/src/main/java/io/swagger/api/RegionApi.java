/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ErrorResponse;
import io.swagger.model.Region;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-05-27T11:55:04.724Z[GMT]")
@Api(value = "region", description = "the region API")
public interface RegionApi {

    @ApiOperation(value = "returns a region", nickname = "addRegion", notes = "add details about a region", response = Region.class, authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "discom", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created", response = Region.class),
        @ApiResponse(code = 401, message = "Access token is missing or invalid.", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "The specified resource was not found.", response = ErrorResponse.class) })
    @RequestMapping(value = "/region",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Region> addRegion();


    @ApiOperation(value = "returns a region", nickname = "updateRegion", notes = "update details about a region", response = Region.class, authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "discom", })
    @ApiResponses(value = { 
        @ApiResponse(code = 202, message = "Accepted", response = Region.class),
        @ApiResponse(code = 401, message = "Access token is missing or invalid.", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "The specified resource was not found.", response = ErrorResponse.class) })
    @RequestMapping(value = "/region",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Region> updateRegion();

}
