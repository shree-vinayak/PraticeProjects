/*
 * Astute Energy API Specification.
 * Rest enpoints to be used with the Angular application for Astute Energy.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.astute.dto;

import java.util.Objects;
import com.astute.api.model.Address;
import com.astute.api.model.Region;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.validation.Valid;

/**
 * Company
 */
@Entity
public class CompanyDto implements Serializable {

	@JsonProperty("id")
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer id;

	@JsonProperty("name")
	private String name;

	@JsonProperty("logo")
	private String logo;

	@JsonProperty("initials")
	private String initials;

	@JsonProperty("email")
	private String email;

	@JsonProperty("contact")
	private Integer contact;

	@JsonProperty("address")

	@OneToOne(targetEntity = Address.class, cascade = CascadeType.ALL)
	@JoinColumn(name = "commomAddressId", referencedColumnName = "id")
	private Address address = null;

	@JsonProperty("region")
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, targetEntity = RegionDto.class)
	@JoinColumn(name = "companyId", referencedColumnName = "id")
	private List<Region> region = null;

	public CompanyDto id(Integer id) {
		this.id = id;
		return this;
	}

	/**
	 * Get id
	 * 
	 * @return id
	 **/
	@JsonProperty("id")
	@ApiModelProperty(example = "2001", value = "")

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public CompanyDto name(String name) {
		this.name = name;
		return this;
	}

	/**
	 * Get name
	 * 
	 * @return name
	 **/
	@JsonProperty("name")
	@ApiModelProperty(example = "Madhya Pradesh Paschim Kshetra Vidyut Vitaran Company Ltd", required = true, value = "")
	@NotNull
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public CompanyDto logo(String logo) {
		this.logo = logo;
		return this;
	}

	/**
	 * Get logo
	 * 
	 * @return logo
	 **/
	@JsonProperty("logo")
	@ApiModelProperty(example = "dfjkldsfkhsdjfhldksjhhfslkjdhfjklsdhflkhdsjkfhsdbflbxcvkjlhsljfhdsklflsbfldfkjldshfjkhvljkfhksjdfhjksdbfklbfkjldshfkldsbvlkafhklsdjhflvblakjslahfklsfkjlasdlfkbsdflashflkjsdhflksdhflkshadfklhsdlfkhsalkjfsfhlsadkj", value = "")

	public String getLogo() {
		return logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	public CompanyDto initials(String initials) {
		this.initials = initials;
		return this;
	}

	/**
	 * Get initials
	 * 
	 * @return initials
	 **/
	@JsonProperty("initials")
	@ApiModelProperty(example = "MPWZ", value = "")

	public String getInitials() {
		return initials;
	}

	public void setInitials(String initials) {
		this.initials = initials;
	}

	public CompanyDto email(String email) {
		this.email = email;
		return this;
	}

	/**
	 * Get email
	 * 
	 * @return email
	 **/
	@JsonProperty("email")
	@ApiModelProperty(example = "ankit@gmail.com", required = true, value = "")
	@NotNull
	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public CompanyDto contact(Integer contact) {
		this.contact = contact;
		return this;
	}

	/**
	 * Get contact
	 * 
	 * @return contact
	 **/
	@JsonProperty("contact")
	@ApiModelProperty(example = "9893042451", required = true, value = "")
	@NotNull
	public Integer getContact() {
		return contact;
	}

	public void setContact(Integer contact) {
		this.contact = contact;
	}

	public CompanyDto address(Address address) {
		this.address = address;
		return this;
	}

	/**
	 * Get address
	 * 
	 * @return address
	 **/
	@JsonProperty("address")
	@ApiModelProperty(required = true, value = "")
	@NotNull
	@Valid
	public Address getAddress() {
		return address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	public CompanyDto region(List<Region> region) {
		this.region = region;
		return this;
	}

	public CompanyDto addRegionItem(Region regionItem) {
		if (this.region == null) {
			this.region = new ArrayList<Region>();
		}
		this.region.add(regionItem);
		return this;
	}

	/**
	 * Get region
	 * 
	 * @return region
	 **/
	@JsonProperty("region")
	@ApiModelProperty(value = "")
	@Valid
	public List<Region> getRegion() {
		return region;
	}

	public void setRegion(List<Region> region) {
		this.region = region;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		CompanyDto company = (CompanyDto) o;
		return Objects.equals(this.id, company.id) && Objects.equals(this.name, company.name)
				&& Objects.equals(this.logo, company.logo) && Objects.equals(this.initials, company.initials)
				&& Objects.equals(this.email, company.email) && Objects.equals(this.contact, company.contact)
				&& Objects.equals(this.address, company.address) && Objects.equals(this.region, company.region);
	}

	@Override
	public int hashCode() {
		return Objects.hash(id, name, logo, initials, email, contact, address, region);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class Company {\n");

		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    name: ").append(toIndentedString(name)).append("\n");
		sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
		sb.append("    initials: ").append(toIndentedString(initials)).append("\n");
		sb.append("    email: ").append(toIndentedString(email)).append("\n");
		sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
		sb.append("    address: ").append(toIndentedString(address)).append("\n");
		sb.append("    region: ").append(toIndentedString(region)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}
}
