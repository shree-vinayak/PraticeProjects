/*
 * Astute Energy API Specification.
 * Rest enpoints to be used with the Angular application for Astute Energy.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.astute.dto;

import java.util.Objects;
import com.astute.api.model.Address;
import com.astute.api.model.Division;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.validation.Valid;

/**
 * Circle
 */
@Entity
public class CircleDto  implements Serializable {
	
  @JsonProperty("idCircle")
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private Integer idCircle;

  @JsonProperty("name")
  private String name;

  @JsonProperty("email")
  private String email;

  @JsonProperty("contact")
  private Integer contact;

  @JsonProperty("address")
  @OneToOne(targetEntity = Address.class, cascade = CascadeType.ALL)
	@JoinColumn(name = "commomAddressId", referencedColumnName = "idCircle")
  private Address address = null;

  @JsonProperty("division")
  @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, targetEntity = RegionDto.class)
@JoinColumn(name = "divisionId", referencedColumnName = "idCircle")
  private List<Division> division = null;

  public CircleDto idCircle(Integer idCircle) {
    this.idCircle = idCircle;
    return this;
  }

  /**
   * Get idCircle
   * @return idCircle
   **/
  @JsonProperty("idCircle")
  @ApiModelProperty(example = "2003", value = "")
  
  public Integer getIdCircle() {
    return idCircle;
  }

  public void setIdCircle(Integer idCircle) {
    this.idCircle = idCircle;
  }

  public CircleDto name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   **/
  @JsonProperty("name")
  @ApiModelProperty(example = "Jabalupur Circle", value = "")
  
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CircleDto email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   **/
  @JsonProperty("email")
  @ApiModelProperty(example = "ankit@gmail.com", value = "")
  
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public CircleDto contact(Integer contact) {
    this.contact = contact;
    return this;
  }

  /**
   * Get contact
   * @return contact
   **/
  @JsonProperty("contact")
  @ApiModelProperty(example = "9893042451", value = "")
  
  public Integer getContact() {
    return contact;
  }

  public void setContact(Integer contact) {
    this.contact = contact;
  }

  public CircleDto address(Address address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   **/
  @JsonProperty("address")
  @ApiModelProperty(value = "")
  @Valid 
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }

  public CircleDto division(List<Division> division) {
    this.division = division;
    return this;
  }

  public CircleDto addDivisionItem(Division divisionItem) {
    if (this.division == null) {
      this.division = new ArrayList<Division>();
    }
    this.division.add(divisionItem);
    return this;
  }

  /**
   * Get division
   * @return division
   **/
  @JsonProperty("division")
  @ApiModelProperty(value = "")
  @Valid 
  public List<Division> getDivision() {
    return division;
  }

  public void setDivision(List<Division> division) {
    this.division = division;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CircleDto circle = (CircleDto) o;
    return Objects.equals(this.idCircle, circle.idCircle) &&
        Objects.equals(this.name, circle.name) &&
        Objects.equals(this.email, circle.email) &&
        Objects.equals(this.contact, circle.contact) &&
        Objects.equals(this.address, circle.address) &&
        Objects.equals(this.division, circle.division);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idCircle, name, email, contact, address, division);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Circle {\n");
    
    sb.append("    idCircle: ").append(toIndentedString(idCircle)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    division: ").append(toIndentedString(division)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

