package com.astute.api.adaptor;

import javax.validation.constraints.Min;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.SecurityContext;

import com.astute.api.NotFoundException;
import com.astute.api.model.Company;

public class CompanyApiAdaptor {
	public Response addCompany(Company company) throws NotFoundException {
        return null;
    }
    
    public Response deleteCircle( @Min(0)Integer idCompany,  @Min(0)Integer idRegion,  @Min(0)Integer id) throws NotFoundException {
        return null;
    }
    
    public Response deleteCompany( @Min(0)Integer id) throws NotFoundException {
        return null;
    }
    
    public Response deleteDivision( @Min(0)Integer idCompany,  @Min(0)Integer idRegion,  @Min(0)Integer idCircle,  @Min(0)Integer id) throws NotFoundException {
        return null;
    }
    
    public Response deleteRegion( @Min(0)Integer idCompany,  @Min(0)Integer id) throws NotFoundException {
        return null;
    }
    
    public Response deleteSubDivision( @Min(0)Integer idCompany,  @Min(0)Integer idRegion,  @Min(0)Integer idCircle,  @Min(0)Integer idDivision,  @Min(0)Integer id) throws NotFoundException {
        return null;
    }
    
    public Response deleteZone( @Min(0)Integer idCompany,  @Min(0)Integer idRegion,  @Min(0)Integer idCircle,  @Min(0)Integer idDivision,  @Min(0)Integer idSubdivision,  @Min(0)Integer id) throws NotFoundException {
        return null;
    }
    
    public Response getAllCircle( @Min(0)Integer idCompany,  @Min(0)Integer idRegion) throws NotFoundException {
        return null;
    }
    
    public Response getAllCompany(SecurityContext securityContext) throws NotFoundException {
        return null;
    }
    
    public Response getAllDivision( @Min(0)Integer idCompany,  @Min(0)Integer idRegion,  @Min(0)Integer idCircle) throws NotFoundException {
        return null;
    }
    
    public Response getAllRegion( @Min(0)Integer idCompany) throws NotFoundException {
        return null;
    }
    
    public Response getAllSubDivision( @Min(0)Integer idCompany,  @Min(0)Integer idRegion,  @Min(0)Integer idCircle,  @Min(0)Integer idDivision) throws NotFoundException {
        return null;
    }
    
    public Response getAllZone( @Min(0)Integer idCompany,  @Min(0)Integer idRegion,  @Min(0)Integer idCircle,  @Min(0)Integer idDivision,  @Min(0)Integer idSubdivision) throws NotFoundException {
        return null;
    }
    
    public Response getCircle( @Min(0)Integer idCompany,  @Min(0)Integer idRegion,  @Min(0)Integer id) throws NotFoundException {
        return null;
    }
    
    public Response getCompany( @Min(0)Integer id) throws NotFoundException {
        return null;
    }
    
    public Response getDivision( @Min(0)Integer idCompany,  @Min(0)Integer idRegion,  @Min(0)Integer idCircle,  @Min(0)Integer id) throws NotFoundException {
        return null;
    }
    
    public Response getRegion( @Min(0)Integer idCompany,  @Min(0)Integer id) throws NotFoundException {
        return null;
    }
    
    public Response getSubDivision( @Min(0)Integer idCompany,  @Min(0)Integer idRegion,  @Min(0)Integer idCircle,  @Min(0)Integer idDivision,  @Min(0)Integer id) throws NotFoundException {
        return null;
    }
    
    public Response getZone( @Min(0)Integer idCompany,  @Min(0)Integer idRegion,  @Min(0)Integer idCircle,  @Min(0)Integer idDivision,  @Min(0)Integer idSubdivision,  @Min(0)Integer id) throws NotFoundException {
        return null;
    }
    
    public Response updateCompany(Company company) throws NotFoundException {
        return null;
    }
}
